version: '3.8'

services:
  comfyui:
    build:
      context: .
      dockerfile: Dockerfile.optimized
      args:
        - BUILDKIT_INLINE_CACHE=1
      cache_from:
        - ghcr.io/innomatix46/comfyui-paperspace:latest
        - ghcr.io/innomatix46/comfyui-paperspace:cache
    image: comfyui-paperspace:optimized
    container_name: comfyui-optimized
    
    # GPU Support
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    
    # Environment Variables
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      - PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512
      - CUDA_LAUNCH_BLOCKING=0
      - PYTHONUNBUFFERED=1
      - PAPERSPACE_CLUSTER_ID=${PAPERSPACE_CLUSTER_ID:-}
      - PAPERSPACE_FQDN=${PAPERSPACE_FQDN:-}
      - PAPERSPACE_METRIC_WORKLOAD_ID=${PAPERSPACE_METRIC_WORKLOAD_ID:-}
      - HF_HOME=/storage/huggingface
      - TORCH_HOME=/storage/torch
      - TRANSFORMERS_CACHE=/storage/transformers
      - XDG_CACHE_HOME=/storage/cache
      
    # Volume Mounts (optimized for Paperspace)
    volumes:
      # Persistent storage (50GB limit)
      - ${STORAGE_PATH:-/storage}:/storage:rw
      
      # Temporary storage (session only, faster)
      - /temp-storage:/temp-storage:rw
      
      # Model directories with named volumes for better performance
      - models_checkpoints:/workspace/ComfyUI/models/checkpoints
      - models_vae:/workspace/ComfyUI/models/vae
      - models_loras:/workspace/ComfyUI/models/loras
      - models_controlnet:/workspace/ComfyUI/models/controlnet
      - models_clip:/workspace/ComfyUI/models/clip
      - models_unet:/workspace/ComfyUI/models/unet
      
      # Output directory
      - ${OUTPUT_PATH:-/storage/output}:/workspace/ComfyUI/output:rw
      
      # Custom nodes (for development)
      - ./custom_nodes:/workspace/ComfyUI/custom_nodes:rw
      
      # Config files
      - ./configs:/workspace/configs:ro
      
      # Docker socket for container management (optional)
      - /var/run/docker.sock:/var/run/docker.sock:ro
      
      # Cache directories for faster startup
      - pip_cache:/root/.cache/pip
      - torch_cache:/root/.cache/torch
      
    # Network Configuration
    ports:
      - "${COMFYUI_PORT:-8188}:8188"     # ComfyUI
      - "${TENSORBOARD_PORT:-6006}:6006" # Tensorboard
      - "${JUPYTER_PORT:-8888}:8888"     # JupyterLab (optional)
    
    networks:
      - comfyui-network
    
    # Resource Limits
    deploy:
      resources:
        limits:
          memory: ${MEMORY_LIMIT:-48G}
        reservations:
          memory: ${MEMORY_RESERVATION:-8G}
    
    # Health Check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8188/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Restart Policy
    restart: unless-stopped
    
    # Security Options
    security_opt:
      - no-new-privileges:true
    
    # Shared Memory Size (important for PyTorch)
    shm_size: ${SHM_SIZE:-8gb}
    
    # Interactive Terminal
    stdin_open: true
    tty: true
    
    # Logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Labels for organization
    labels:
      - "com.comfyui.description=ComfyUI Optimized for Paperspace"
      - "com.comfyui.version=latest"
      - "com.comfyui.gpu=a6000"

  # Optional: Nginx reverse proxy for better URL handling
  nginx:
    image: nginx:alpine
    container_name: comfyui-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    networks:
      - comfyui-network
    depends_on:
      - comfyui
    restart: unless-stopped
    profiles:
      - with-proxy

  # Optional: Redis for caching and queue management
  redis:
    image: redis:7-alpine
    container_name: comfyui-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - comfyui-network
    restart: unless-stopped
    profiles:
      - with-cache

  # Optional: PostgreSQL for workflow storage
  postgres:
    image: postgres:15-alpine
    container_name: comfyui-postgres
    environment:
      - POSTGRES_DB=comfyui
      - POSTGRES_USER=${DB_USER:-comfyui}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-comfyui_pass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - comfyui-network
    restart: unless-stopped
    profiles:
      - with-database

# Networks
networks:
  comfyui-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

# Volumes (named volumes for better performance)
volumes:
  models_checkpoints:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STORAGE_PATH:-/storage}/models/checkpoints
  
  models_vae:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STORAGE_PATH:-/storage}/models/vae
  
  models_loras:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STORAGE_PATH:-/storage}/models/loras
  
  models_controlnet:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STORAGE_PATH:-/storage}/models/controlnet
  
  models_clip:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STORAGE_PATH:-/storage}/models/clip
  
  models_unet:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${STORAGE_PATH:-/storage}/models/unet
  
  pip_cache:
    driver: local
  
  torch_cache:
    driver: local
  
  redis_data:
    driver: local
  
  postgres_data:
    driver: local